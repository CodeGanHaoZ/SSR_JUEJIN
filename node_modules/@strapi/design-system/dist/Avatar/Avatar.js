import { jsxs as l, jsx as i } from "react/jsx-runtime";
import { useState as h } from "react";
import o from "styled-components";
import { Typography as u } from "../Typography/Typography.js";
import { Flex as m } from "../Flex/Flex.js";
import { Box as d } from "../Box/Box.js";
import { previewSize as s, avatarSize as t } from "./constants.js";
const x = o.img`
  border-radius: 50%;
  object-fit: cover;
  display: block;
  position: relative;
`, f = o.img`
  border-radius: 50%;
  object-fit: cover;
  position: absolute;
  transform: translate(-${(s - t) / 2}px, -100%);
  margin-top: -${({
  theme: e
}) => e.spaces[1]};
`, g = o(d)`
  opacity: 0.4;
`, S = ({
  src: e,
  alt: n,
  preview: r
}) => {
  const [c, p] = h(!1), a = Boolean(r && c);
  return l("span", {
    children: [a ? i(f, {
      "aria-hidden": !0,
      alt: "",
      width: `${s}px`,
      height: `${s}px`,
      src: r === !0 ? e : typeof r == "string" ? r : ""
    }) : null, l(d, {
      zIndex: a ? 1 : void 0,
      position: "relative",
      onMouseEnter: () => p(!0),
      onMouseLeave: () => p(!1),
      width: `${t}px`,
      height: `${t}px`,
      children: [a ? i(g, {
        background: "neutral0",
        borderRadius: "50%",
        position: "absolute",
        width: `${t}px`,
        height: `${t}px`,
        zIndex: 1
      }) : null, i(x, {
        src: e,
        alt: n,
        width: `${t}px`,
        height: `${t}px`
      })]
    })]
  });
}, b = o(m)`
  span {
    line-height: 0;
  }
`, k = ({
  children: e,
  background: n = "primary600",
  textColor: r = "buttonNeutral0"
}) => i(b, {
  background: n,
  borderRadius: "50%",
  width: `${t}px`,
  height: `${t}px`,
  justifyContent: "center",
  children: i(u, {
    fontSize: 0,
    fontWeight: "bold",
    textColor: r,
    textTransform: "uppercase",
    children: e
  })
});
export {
  S as Avatar,
  k as Initials
};
