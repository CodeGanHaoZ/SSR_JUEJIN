import { jsxs as x, jsx as n } from "react/jsx-runtime";
import e from "styled-components";
import { Typography as t } from "../Typography/Typography.js";
import { useId as y } from "../helpers/useId.js";
import { Box as s } from "../Box/Box.js";
import { Flex as g } from "../Flex/Flex.js";
import { AccordionContext as b } from "./AccordionContext.js";
const h = ({
  theme: r,
  expanded: o,
  variant: i,
  disabled: d,
  error: a
}) => a ? `1px solid ${r.colors.danger600} !important` : d ? `1px solid ${r.colors.neutral150}` : o ? `1px solid ${r.colors.primary600}` : i === "primary" ? `1px solid ${r.colors.neutral0}` : `1px solid ${r.colors.neutral100}`, v = e(t)``, A = e(s)`
  border: ${h};

  &:hover:not([aria-disabled='true']) {
    border: 1px solid ${({
  theme: r
}) => r.colors.primary600};

    ${v} {
      color: ${({
  theme: r,
  expanded: o
}) => o ? void 0 : r.colors.primary700};
    }

    ${t} {
      color: ${({
  theme: r,
  expanded: o
}) => o ? void 0 : r.colors.primary600};
    }

    & > ${g} {
      background: ${({
  theme: r
}) => r.colors.primary100};
    }

    [data-strapi-dropdown='true'] {
      background: ${({
  theme: r
}) => r.colors.primary200};
    }
  }
`, F = ({
  children: r,
  disabled: o = !1,
  error: i,
  expanded: d = !1,
  hasErrorMessage: a = !0,
  id: l,
  onToggle: c,
  toggle: u,
  size: m = "M",
  variant: p = "primary",
  shadow: f
}) => {
  const $ = y(l);
  return x(b.Provider, {
    value: {
      expanded: d,
      onToggle: c,
      toggle: u,
      id: $,
      size: m,
      variant: p,
      disabled: o
    },
    children: [n(A, {
      "data-strapi-expanded": d,
      disabled: o,
      "aria-disabled": o,
      expanded: d,
      hasRadius: !0,
      variant: p,
      error: i,
      shadow: f,
      children: r
    }), i && a && n(s, {
      paddingTop: 1,
      children: n(t, {
        variant: "pi",
        textColor: "danger600",
        children: i
      })
    })]
  });
};
export {
  F as Accordion,
  v as AccordionTypography
};
