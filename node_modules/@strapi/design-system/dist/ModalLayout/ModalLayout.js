import e from "react";
import t from "styled-components";
import r from "prop-types";
import { Box as l } from "../Box/Box.js";
import { Flex as m } from "../Flex/Flex.js";
import { FocusTrap as p } from "../FocusTrap/FocusTrap.js";
import { Portal as d } from "../Portal/Portal.js";
import { ModalContext as s } from "./ModalContext.js";
import { DismissibleLayer as u } from "../DismissibleLayer/DismissibleLayer.js";
import c from "../helpers/useLockScroll.js";
const f = t(m)`
  inset: 0;
  background: ${({ theme: o }) => `${o.colors.neutral800}1F`};
`, y = t(l)`
  width: ${830 / 16}rem;
`, g = ({ onClose: o, labelledBy: a, ...i }) => (c(!0), /* @__PURE__ */ e.createElement(d, null, /* @__PURE__ */ e.createElement(s.Provider, {
  value: o
}, /* @__PURE__ */ e.createElement(f, {
  justifyContent: "center",
  paddingLeft: 8,
  paddingRight: 8,
  position: "fixed",
  zIndex: 4
}, /* @__PURE__ */ e.createElement(p, null, /* @__PURE__ */ e.createElement(u, {
  onEscapeKeyDown: o,
  onPointerDownOutside: o
}, /* @__PURE__ */ e.createElement(y, {
  "aria-labelledby": a,
  onClick: (n) => n.stopPropagation(),
  background: "neutral0",
  hasRadius: !0,
  shadow: "popupShadow",
  role: "dialog",
  "aria-modal": !0,
  ...i
})))))));
g.propTypes = {
  labelledBy: r.string.isRequired,
  onClose: r.func.isRequired
};
export {
  g as ModalLayout
};
