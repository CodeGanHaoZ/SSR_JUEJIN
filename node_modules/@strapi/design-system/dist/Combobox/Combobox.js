import o, { useState as y, useRef as C, useEffect as U, useLayoutEffect as xe, Children as _, cloneElement as ye } from "react";
import e from "prop-types";
import { Cross as Ie, CarretDown as ke } from "@strapi/icons";
import { useId as Oe } from "../helpers/useId.js";
import { filterOptions as j, maintainScrollVisibility as Me, getActionFromKey as $e, MenuActions as b, getUpdatedIndex as R } from "./utils.js";
import { Flex as q } from "../Flex/Flex.js";
import { IconBox as we, CaretBox as Le } from "../Select/components.js";
import { Popover as De } from "../Popover/Popover.js";
import { Box as Re } from "../Box/Box.js";
import { Typography as z } from "../Typography/Typography.js";
import { Loader as Se } from "../Loader/Loader.js";
import { MainRow as Be, InputContainer as Fe, ValueContainer as Te, Input as Ae } from "./components.js";
import { ComboboxOption as Pe } from "./ComboboxOption.js";
import { Field as Ve } from "../Field/Field.js";
import { FieldLabel as Ke } from "../Field/FieldLabel.js";
import "../Field/FieldInput.js";
import { FieldHint as Ne } from "../Field/FieldHint.js";
import { FieldError as He } from "../Field/FieldError.js";
import "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Stack as Ue } from "../Stack/Stack.js";
import { KeyboardKeys as _e } from "../helpers/keyboardKeys.js";
import { VisuallyHidden as je } from "../VisuallyHidden/VisuallyHidden.js";
const I = ({
  children: s,
  clearLabel: G,
  creatable: h,
  createMessage: J,
  disabled: c,
  error: k,
  hasMoreItems: Q,
  hint: $,
  id: X,
  label: E,
  labelAction: Y,
  loading: w,
  loadingMessage: Z,
  noOptionsMessage: ee,
  onChange: S,
  onClear: B,
  onCreateOption: te,
  onInputChange: F,
  onLoadMore: oe,
  placeholder: re,
  required: T,
  value: d,
  ...ne
}) => {
  const ae = () => s.find((t) => t.props?.value.toLowerCase() === d.toLowerCase()).props?.children, [i, A] = y(0), [ie, le] = y(null), [l, P] = y(s), [u, se] = y(!1), [n, O] = y(""), v = C(), M = C(!1), x = C(), V = C(), ce = C(), K = C(!0), a = Oe(X), pe = `${a}-label`;
  if (!E && !ne["aria-label"])
    throw new Error('The Combobox component needs a "label" or an "aria-label" props');
  U(() => {
    P(j(s, n));
  }, [n, s]), U(() => {
    u && v.current && Me(v.current);
  }, [i, u]), xe(() => {
    K.current && (K.current = !1);
  }, [d]);
  const de = u ? `${a}-${i}` : "", N = () => {
    S(null), O("");
  }, fe = (t) => {
    F && F(t);
    const r = x.current.value;
    P(j(s, r)), A(0), le(null), n !== r && O(r), u || f(!0, !1);
  }, ue = (t) => {
    const { key: r } = t, p = h && n ? l.length : l.length - 1, g = $e(r, u);
    switch (d && !n && r === _e.BACKSPACE && N(), g) {
      case b.Next: {
        if (i === p) {
          m(0);
          break;
        }
        m(R(i, p, g));
        break;
      }
      case b.Previous: {
        if (i === 0) {
          m(p);
          break;
        }
        m(R(i, p, g));
        break;
      }
      case b.Last:
      case b.First: {
        if (i === p) {
          m(0);
          break;
        }
        m(R(i, p, g));
        break;
      }
      case b.CloseSelect:
        t.preventDefault(), L(i);
        break;
      case b.Close:
        t.preventDefault(), f(!1);
        break;
      case b.Open:
        f(!0);
        break;
    }
  }, me = (t) => {
    if (t.preventDefault(), d && !M.current && O(""), M.current) {
      M.current = !1;
      return;
    }
    f(!1, !1);
  }, m = (t) => {
    A(t);
  }, be = (t) => {
    m(t), L(t);
  }, H = () => {
    M.current = !0;
  }, L = (t) => {
    const r = l[t];
    if (O(""), r) {
      S(r.props.value), f(!1);
      return;
    }
    h && (te(n), f(!1));
  }, f = (t, r = !0) => {
    se(t), r && x.current.focus();
  }, ge = _.toArray(l).map((t, r) => {
    const p = i === r;
    return ye(t, {
      id: `${a}-${r}`,
      "aria-selected": ie === r,
      "aria-posinset": r + 1,
      "aria-setsize": _.toArray(l).length,
      ref(g) {
        p && (v.current = g);
      },
      onClick: () => be(r),
      onMouseDown: H,
      isSelected: p
    });
  }), Ce = () => {
    x.current.focus(), B && B(), N();
  }, he = () => {
    x.current.focus(), f(!0);
  }, Ee = () => {
    const t = l.findIndex((r) => r.props?.children === n);
    return n && t === -1;
  }, ve = (t) => {
    t.preventDefault(), f(t, !0);
  };
  let D;
  return k ? D = `${a}-error` : $ && (D = `${a}-hint`), /* @__PURE__ */ o.createElement(Ve, {
    hint: $,
    error: k,
    id: a,
    required: T
  }, /* @__PURE__ */ o.createElement(je, {
    "aria-live": "polite",
    "aria-atomic": "false",
    "aria-relevant": "additions text"
  }, d), /* @__PURE__ */ o.createElement(Ue, {
    spacing: E || $ || k ? 1 : 0
  }, E && /* @__PURE__ */ o.createElement(Ke, {
    action: Y
  }, E), /* @__PURE__ */ o.createElement(Be, {
    ref: V,
    $disabled: c,
    hasError: k
  }, /* @__PURE__ */ o.createElement(Fe, {
    wrap: "wrap"
  }, !n && d && /* @__PURE__ */ o.createElement(Te, {
    id: `${a}-selected-value`
  }, /* @__PURE__ */ o.createElement(z, null, ae())), /* @__PURE__ */ o.createElement(Ae, {
    "aria-activedescendant": de,
    "aria-autocomplete": "list",
    "aria-controls": `${a}-listbox`,
    "aria-disabled": c,
    "aria-expanded": u,
    "aria-haspopup": "listbox",
    "aria-describedby": D,
    autoComplete: "off",
    autoCorrect: "off",
    id: a,
    onBlur: c ? void 0 : me,
    onClick: c ? void 0 : ve,
    onInput: c ? void 0 : fe,
    onKeyDown: c ? void 0 : ue,
    placeholder: d ? "" : re,
    readOnly: c,
    ref: x,
    required: T,
    role: "combobox",
    spellCheck: "off",
    type: "text",
    value: n
  })), /* @__PURE__ */ o.createElement(q, null, (d || n) && /* @__PURE__ */ o.createElement(we, {
    id: `${a}-clear`,
    "aria-label": G,
    disabled: c,
    paddingLeft: 3,
    as: "button",
    onClick: Ce,
    type: "button"
  }, /* @__PURE__ */ o.createElement(Ie, null)), /* @__PURE__ */ o.createElement(Le, {
    disabled: c,
    paddingLeft: 3,
    "aria-hidden": !0,
    as: "button",
    onClick: he,
    tabIndex: -1,
    type: "button"
  }, /* @__PURE__ */ o.createElement(ke, null)))), /* @__PURE__ */ o.createElement(Ne, null), /* @__PURE__ */ o.createElement(He, null)), u && /* @__PURE__ */ o.createElement(De, {
    id: `${a}-popover`,
    source: V,
    spacing: 4,
    fullWidth: !0,
    intersectionId: `${a}-listbox-popover-intersection`,
    onReachEnd: Q && !w ? oe : void 0
  }, /* @__PURE__ */ o.createElement("div", {
    role: "listbox",
    ref: ce,
    id: `${a}-listbox`,
    "aria-labelledby": E ? pe : void 0
  }, (Boolean(l.length) || h) && /* @__PURE__ */ o.createElement(o.Fragment, null, ge, Ee() && h && /* @__PURE__ */ o.createElement(Pe, {
    isSelected: i === l.length,
    ref: (t) => {
      i === l.length && (v.current = t);
    },
    onMouseDown: H,
    onClick: () => L(),
    taindex: 0
  }, J(n))), !l.length && !h && !w && /* @__PURE__ */ o.createElement(Re, {
    paddingLeft: 4,
    paddingRight: 4,
    paddingTop: 2,
    paddingBottom: 2,
    ref: v
  }, /* @__PURE__ */ o.createElement(z, {
    textColor: "neutral800"
  }, ee(n))), w && /* @__PURE__ */ o.createElement(q, {
    justifyContent: "center",
    alignItems: "center",
    paddingTop: 2,
    paddingBottom: 2
  }, /* @__PURE__ */ o.createElement(Se, {
    small: !0
  }, Z)))));
}, W = (s) => /* @__PURE__ */ o.createElement(I, {
  ...s,
  creatable: !0
});
I.defaultProps = {
  "aria-label": void 0,
  clearLabel: "clear",
  creatable: !1,
  createMessage: (s) => `Create "${s}"`,
  disabled: !1,
  error: void 0,
  hasMoreItems: !1,
  hint: void 0,
  id: void 0,
  label: void 0,
  loading: !1,
  loadingMessage: "Loading content...",
  noOptionsMessage: () => "No results found",
  onClear: void 0,
  onCreateOption: void 0,
  onInputChange: void 0,
  onLoadMore: void 0,
  placeholder: "Select or enter a value",
  value: void 0
};
W.defaultProps = I.defaultProps;
I.propTypes = {
  "aria-label": e.string,
  children: e.oneOfType([e.arrayOf(e.node), e.node]),
  clearLabel: e.string,
  creatable: e.bool,
  createMessage: e.func,
  disabled: e.bool,
  error: e.string,
  hasMoreItems: e.bool,
  id: e.string,
  hint: e.oneOfType([e.string, e.node, e.arrayOf(e.node)]),
  label: e.string,
  labelAction: e.element,
  loading: e.bool,
  loadingMessage: e.string,
  noOptionsMessage: e.func,
  onChange: e.func.isRequired,
  onClear: e.func,
  onCreateOption: e.func,
  onInputChange: e.func,
  onLoadMore: e.func,
  placeholder: e.string,
  value: e.string
};
W.propTypes = {
  ...I.propTypes,
  onCreateOption: e.func.isRequired
};
export {
  I as Combobox,
  W as CreatableCombobox
};
